import { $, state } from './helpers.js';
let voices=[]; function populateVoices(){ voices=speechSynthesis.getVoices(); const sel=$('#voiceSelect'); if(!sel) return; sel.innerHTML=''; voices.forEach((v,i)=>{ const o=document.createElement('option'); o.value=i; o.textContent=`${v.name} (${v.lang})`; sel.appendChild(o);}); const idx=voices.findIndex(v=>/English|en-/i.test(v.lang)); if(idx>=0) sel.value=idx; }
function speak(t){ if(!state.speakingEnabled||!('speechSynthesis' in window)) return; const u=new SpeechSynthesisUtterance(t); const idx=parseInt($('#voiceSelect')?.value||'0',10); if(voices[idx]) u.voice=voices[idx]; u.pitch=1.1; u.rate=0.95; speechSynthesis.cancel(); speechSynthesis.speak(u); }
function addBubble(t,w='bot'){ const el=document.createElement('div'); el.className=`bubble ${w}`; el.textContent=t; $('#chatLog').appendChild(el); $('#chatLog').scrollTop=$('#chatLog').scrollHeight; }
async function askAI(message){ const resp=await fetch('/api/ask',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({message,name:state.name,age:state.age||'5-8'})}); if(!resp.ok) throw new Error('server'); const data=await resp.json(); return data.text||'Try again?'; }
const jokes=['Why did the teddy bear say no to dessert? Because it was stuffed!','What do you call cheese that isn’t yours? Nacho cheese!','Why did the math book look sad? It had too many problems!']; const rnd=n=>Math.floor(Math.random()*n); const pick=a=>a[rnd(a.length)]; let pending=null;
function quiz(age='5-8'){ let a,b,op; if(age==='2-4'){a=rnd(5)+1;b=rnd(5)+1;op='+';} else {a=rnd(10)+1;b=rnd(10)+1;op:Math.random()>0.5?'+':'-';} const ans=op==='+'?a+b:a-b; return {q:`Okay! What is ${a} ${op} ${b}?`, check:x=>Number(x)===ans, ans}; }
function localReply(mraw){ const m=(mraw||'').toLowerCase().trim(); const name=state.name?`, ${state.name}`:''; if(!m) return 'I didn’t hear anything. Try again?'; if(pending){ const g=m.match(/-?\d+/)?.[0]; if(g!==undefined && pending.check(g)){ pending=null; return `Yay${name}! ${g} is correct! 🎉 Want another question or a joke?`; } else if(g!==undefined){ const c=pending.ans; pending=null; return `Nice try${name}! The right answer was ${c}. Want a different question or a joke?`; } } if(/(hello|hi|hey)/.test(m)) return pick([`Hi${name}! 👋`,`Hey${name}!`,`Hello${name}!`]); if(/joke/.test(m)) return pick(jokes); if(/math|quiz/.test(m)){ pending=quiz(state.age||'5-8'); return pending.q;} return `You said: “${mraw}”. Want a joke or a math quiz?`; }
export function initChat(){ if('speechSynthesis' in window){ populateVoices(); speechSynthesis.onvoiceschanged = populateVoices; } $('#typeBtn')?.addEventListener('click',()=>{ $('#typeBox').classList.toggle('hidden'); $('#textInput').focus(); }); $('#sendBtn')?.addEventListener('click', async ()=>{ const t=$('#textInput').value.trim(); if(!t) return; $('#textInput').value=''; addBubble(t,'user'); try{ const r=await askAI(t); addBubble(r,'bot'); speak(r);} catch{ const r=localReply(t); addBubble(r,'bot'); speak(r);} }); const SR=window.SpeechRecognition||window.webkitSpeechRecognition; if(!SR){ const b=$('#micBtn'); if(b){b.disabled=true; b.textContent='🎙️ Not supported';}} else { const rec=new SR(); rec.lang='en-US'; rec.continuous=false; rec.interimResults=false; let recognizing=false; rec.onstart=()=>{recognizing=true; $('#micBtn').textContent='🛑 Stop';}; rec.onend=()=>{recognizing=false; $('#micBtn').textContent='🎙️ Hold to Talk';}; rec.onresult=async e=>{ const text=Array.from(e.results).map(r=>r[0].transcript).join(' ').trim(); if(!text) return; addBubble(text,'user'); try{ const r=await askAI(text); addBubble(r,'bot'); speak(r);} catch{ const r=localReply(text); addBubble(r,'bot'); speak(r);} }; $('#micBtn')?.addEventListener('mousedown',()=>{ if(!recognizing) rec.start(); }); $('#micBtn')?.addEventListener('mouseup',()=>{ if(recognizing) rec.stop(); }); } const hello=`Hello${state.name?`, ${state.name}`:''}! Ask me anything, or say "math quiz".`; addBubble(hello,'bot'); speak(hello); }