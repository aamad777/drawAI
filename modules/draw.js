import { $, $$, state } from './helpers.js';
const LABEL_MAP={"tabby":"cat","tiger cat":"cat","Egyptian cat":"cat","lynx":"cat","Siamese cat":"cat","Persian cat":"cat","kitten":"cat","golden retriever":"dog","Labrador retriever":"dog","beagle":"dog","puppy":"dog","jay":"bird","magpie":"bird","hen":"bird","robin":"bird","ostrich":"bird","goldfish":"fish","tench":"fish","rock beauty":"fish","puffer":"fish","car":"car","sports car":"car","minivan":"car","jeep":"car","tree":"tree","palm":"tree","Christmas tree":"tree","house":"house","daisy":"flower","sunflower":"flower","lotus":"flower","apple":"apple","banana":"banana"};
const PIC_FOR={"cat":"public/cat.svg","dog":"public/dog.svg","bird":"public/bird.svg","fish":"public/fish.svg","car":"public/car.svg","tree":"public/tree.svg","house":"public/house.svg","flower":"public/flower.svg","apple":"public/apple.svg","banana":"public/banana.svg"};
let model=null; async function load(){ if(model) return model; try{ model=await mobilenet.load(); return model;}catch{return null;} }
export function initDraw(){ const c=$('#drawCanvas'), ctx=c.getContext('2d',{willReadFrequently:true}); let draw=false, color='#1982c4', size=10; function setColor(col){ color=col; $$('.swatch').forEach(s=>s.setAttribute('aria-checked', String(s.dataset.color===col))); } function start(x,y){ draw=true; ctx.lineCap='round'; ctx.lineJoin='round'; ctx.strokeStyle=color; ctx.lineWidth=size; ctx.beginPath(); ctx.moveTo(x,y);} function move(x,y){ if(!draw) return; ctx.lineTo(x,y); ctx.stroke(); } function end(){ draw=false; ctx.closePath(); } function pos(e){ const r=c.getBoundingClientRect(); const x=(e.touches?e.touches[0].clientX:e.clientX)-r.left; const y=(e.touches?e.touches[0].clientY:e.clientY)-r.top; return {x:x*(c.width/r.width), y:y*(c.height/r.height)}; }
 $$('.swatch').forEach(b=>b.addEventListener('click',()=>setColor(b.dataset.color))); $('#brushSize').addEventListener('input',e=>size=+e.target.value);
 c.addEventListener('mousedown',e=>{const p=pos(e); start(p.x,p.y)}); c.addEventListener('mousemove',e=>{const p=pos(e); move(p.x,p.y)}); window.addEventListener('mouseup',end);
 c.addEventListener('touchstart',e=>{const p=pos(e); start(p.x,p.y)},{passive:false}); c.addEventListener('touchmove',e=>{e.preventDefault(); const p=pos(e); move(p.x,p.y)},{passive:false}); c.addEventListener('touchend',end);
 $$('.sticker').forEach(b=>b.addEventListener('click',()=>{ ctx.font='48px serif'; ctx.fillText(b.textContent, Math.random()*(c.width-60)+20, Math.random()*(c.height-60)+60);}));
 $('#clearBtn').addEventListener('click',()=>ctx.clearRect(0,0,c.width,c.height)); $('#saveDrawingBtn').addEventListener('click',()=>{ const a=document.createElement('a'); a.href=c.toDataURL('image/png'); a.download='my_drawing.png'; a.click(); });
 $('#aiGuessBtn').addEventListener('click', async ()=>{ const m=await load(); if(!m){ $('#aiGuessLabel').textContent='Model failed to load.'; return; } const tmp=document.createElement('canvas'); tmp.width=224; tmp.height=224; const t=tmp.getContext('2d'); t.fillStyle='#fff'; t.fillRect(0,0,224,224); t.drawImage(c,0,0,224,224); const preds=await m.classify(tmp); if(!preds?.length){ $('#aiGuessLabel').textContent='I cannot tell. Try again!'; return;} let best=preds[0].className; for(const [k,v] of Object.entries(LABEL_MAP)) if(best.toLowerCase().includes(k.toLowerCase())){ best=v; break;} state.lastGuess=String(best).toLowerCase(); $('#aiGuessLabel').textContent=`I think this is a ${state.lastGuess}!`; }); $('#showPicBtn').addEventListener('click',()=>{ const g=state.lastGuess, box=$('#aiPicBox'); if(!g){ box.textContent='Guess something first!'; box.classList.remove('hidden'); return;} const src=PIC_FOR[g]; if(!src){ box.textContent='No picture for that yet.'; box.classList.remove('hidden'); return;} box.innerHTML=`<img alt="${g}" src="${src}">`; box.classList.remove('hidden'); }); setColor(color); }